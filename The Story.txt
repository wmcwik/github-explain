What the Heck is GitHub?

	GitHub is both a website and a piece of software. It is essentially a tool that allows a 
programmer to work on a coding project and maintain a history of all the changes that were made 
in the code. This typically is done by simply having multiple copies of the files on the computer. 
If bad changes are made, the programmer can start over from a version of the file that didn't have 
the bad code. In design, this is done by copying pages in the InDesign file or artboards in Illustrator. 
While GitHub still stores does this, it allows the user to more easily review the changes, see a 
history of all the changes and who made them and revert to older files if needed. For example, suppose 
a programmer was working on the html of a website. They start the coding and have files and folders 
on their computer for the project. The programmer would then create a repository on the GitHub website 
and uploads those files and folders to it. The repository is simply a copy of the files as they are 
at that point. The programmer then keeps working on the website on their own computer. The GitHub 
software tracks the changes where they can be reviewed and annotated. The programmer would then 
occasionally update the repository online with the changed files. GitHub saves that copy in the 
repository as the main copy, while maintaining the previous copy as an older version. Suppose the 
programmer needs help with the project because they don't know how to code a certain part of it so 
they ask a friend for help. The friend would make a copy of the repository as their own and download 
it to their own computer to work on. This programmer then saves changes, which are tracked in GitHub 
and  updated in their repository. To apply these changes to the original files, this programmer would 
have to send a request to their friend to see if they want to use the changes. The changes can be 
discussed and tested and then merged into main file. Both of the programmers now reach a point where 
they are having trouble. They open up the repository to the community, asking for help by creating 
issues that request what needs to be worked on. Issue can also be created if someone finds an error 
so that one of them can come back to it to fix. Other programmers are able to download the current 
copy of the code, make changes and upload them back to GitHub in the same way. When changes are 
merged into the original repository, the new upload is then made the current version and the previous 
one is added to the list of saved versions. If other users see the repository as valuable to use on 
their own for their own needs, they can work on it and update their own repository without necessarily 
sending changes to the original.

	The GitHub software is based off of Git which was created specifically for Linux programmers to 
keep track of development in 2005. The GitHub software works the same way in the background but uses a 
visual interface instead of a command-line. The work flow of GitHub is specific to computer programming 
and it works well because programming code can be viewed easily and compared line to line to highlight 
the differences. The code can be viewed side by side to assess whether the changes should be implemented. 
The website can host many other files for uses other than programming like text, image and Adobe files. 
Comparison of text files is done similar to programming code because each line can be compared and is 
understandable by the user. Comparison of changes in other files is more difficult since these are in 
computer code and not a programming language. GitHub can recognize that the files are different but 
can't show the user where and the user can't decipher what the code means. Image files can be viewed 
directly on the website to see the changes but other files like InDesign must be downloaded and reviewed. 

	GitHub offers several membership levels and types. The standard free personal account allows 
unlimited repositories that are open to the public but allows no private ones. Personal private 
repositories can be purchased for a monthly fee of about $1 per private repository. Organization 
accounts are more expensive and allow the creation of member accounts for the programming team. 

	In addition to hosting the repositories and allowing many programmers to work on a single 
project remotely, an important aspect of GitHub is the community. There are many programs like the 
GitHub software that will let programmers work on code collaboratively and track changes but the website 
also creates a social network. There, users can create a profile, follow other users and projects and 
generate their own following. There is a search feature that lets users find projects to contribute to 
or code they can use for themselves. The site also shows the most popular projects and picks some to 
showcase. Also, each change that a user makes to the code can also be discussed among the contributing 
members as to whether it should be added to the main files and why. Like competitions for solving problems 
on Innocentive, having a community adds value to the offering. It allows programmers to practice coding 
and learn from each other and discuss best practices. This raises the skills of the group as a whole and 
builds a network. In addition, GitHub has partnered with companies to offer developer tools free for 
students. Their goal is to give students real world experience in developing software which will ultimately 
lead to better programmers and better software in the future. 

	GitHub takes privacy, security and ownership very seriously. The website stores and displays a 
history of every action taken with the account from logging in to creating repositories. Each event is 
marked with the date and time as well as the IP address. This way users can see if there is anything 
suspicious happening in their accounts. GitHub also supports two factor authentication, which means there 
are two steps to logging in. The first step is to log in to the site with the user's regular password. 
Then, another code is generated and sent to the user's phone. The user must enter this code in to the 
website to gain access to their account. This provides extra security if the user names and passwords were 
to be hacked. The hacker would then not be able to access the account without the second code. Also, the 
company has strong physical security controls at the server location such as biometric scanning and 24/7 
on site staff.

	GitHub is very open with their privacy policy. It is simple and easy to understand. The company 
does not share or sell data about its users and only collects minimal data for its own use. The privacy 
policy also explicitly states that the user retains all rights to their data. The website's terms of service 
are also simple and easy to understand. One portion of the terms refers to ownership of the content that 
users generate on the website. It states the content is owned by the user that uploaded it but, if the 
repository is public, the user agrees to allow other users to view the content and to create forks. Forks 
are the copies that users make of another user's repository to work on their own. Since GitHub does not 
require that content have an open license, the owner is able to use it commercially. The user can choose 
a license for their project when they create a repository. There are currently 16 different license options.

	GitHub has put users in the center of the design of their service by making privacy, security and 
ownership a central part. They limit what they do with data and are open about it. They have developed a 
community of collaboration on top of a system that allows people to work together. The difficulty in 
replicating this model would be that it is specific to the characteristics of programming files and that 
it has developed together with the programming culture over time. One useful aspect for designers is that 
individuals can work on a project file on their own computer without affecting someone else that is working 
on the same file. The changes can be compared later. Creating issues and task requests can also be helpful 
in keeping track of what needs to be done and these can be assigned to individuals team members.